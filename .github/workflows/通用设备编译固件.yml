#============================================================================================
# https://github.com/ophub/amlogic-s9xxx-openwrt
# Description: Build OpenWrt
#============================================================================================

name: é€šç”¨è®¾å¤‡ç¼–è¯‘å›ºä»¶

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      source_branch:
        description: "Select the source branch"
        required: false
        default: "openwrt-main"
        type: choice
        options:
          - openwrt-main
          - lede-master
          - immortalwrt-master
          - Lienol-master

env:
  FEEDS_CONF: config/${{ inputs.source_branch }}/feeds.conf.default
  CONFIG_FILE: config/${{ inputs.source_branch }}/config
  DIY_P1_SH: config/${{ inputs.source_branch }}/diy-part1.sh
  DIY_P2_SH: config/${{ inputs.source_branch }}/diy-part2.sh
  UPLOAD_BIN_DIR: true
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04
    if: ${{ github.event.repository.owner.id }} == ${{ github.event.sender.id }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Environment
        uses: actions/setup-node@v3

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libncurses5-dev zlib1g-dev gawk git gettext libssl-dev xsltproc rsync wget unzip python3

      - name: Clone Source Code
        run: |
          # Clone the appropriate repository based on user input
          # Set up compilation source code
          # Set output information
          echo "status=success" >> $GITHUB_ENV

      - name: Load Custom Feeds
        run: |
          [[ -f "${FEEDS_CONF}" ]] && cp -f ${FEEDS_CONF} openwrt/feeds.conf.default
          chmod +x ${DIY_P1_SH}
          cd openwrt/
          ${GITHUB_WORKSPACE}/${DIY_P1_SH}

      - name: Update and Install Feeds
        run: |
          cd openwrt/
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Load Custom Configuration
        run: |
          [[ -d "files" ]] && mv -f files openwrt/files
          [[ -e "${CONFIG_FILE}" ]] && cp -f ${CONFIG_FILE} openwrt/.config
          chmod +x ${DIY_P2_SH}
          cd openwrt/
          ${GITHUB_WORKSPACE}/${DIY_P2_SH}

      - name: Download Packages
        run: |
          cd openwrt/
          make defconfig
          make download -j8
          find dl -size -1024c -exec ls -l {} \;
          find dl -size -1024c -exec rm -f {} \;

      - name: Compile OpenWrt
        run: |
          cd openwrt/
          echo -e "$(nproc) thread compile"
          make -j$(($(nproc) + 1)) V=s || make -j1 || make -j1 V=s
          echo "status=success" >> $GITHUB_ENV

      - name: Check Space Usage
        run: df -hT

      - name: Upload Bin Directory
        if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_bin_${{ inputs.source_branch }}_$(date +"%Y%m%d")
          path: openwrt/bin

      - name: Organize Files
        if: env.UPLOAD_FIRMWARE == 'true'
        run: |
          cd openwrt/bin/targets/*/*
          rm -rf packages
          echo "FIRMWARE=$PWD" >> $GITHUB_ENV

      - name: Upload Firmware Directory
        if: env.UPLOAD_FIRMWARE == 'true'
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_firmware_${{ inputs.source_branch }}_$(date +"%Y%m%d")
          path: ${{ env.FIRMWARE }}

      - name: Generate Release Tag
        if: env.UPLOAD_RELEASE == 'true'
        run: |
          echo "::set-output name=release_tag::$(date +"%Y%m%d-%H%M")"
          touch release.txt
          echo "ðŸ”— [Cowtransfer](URL)" >> release.txt
          echo "ðŸ”— [WeTransfer](URL)" >> release.txt

      - name: Upload Firmware to Release
        if: env.UPLOAD_RELEASE == 'true'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.tag.outputs.release_tag }}
          body_path: release.txt
          files: ${{ env.FIRMWARE }}/*
